apiVersion: v1
items:
- apiVersion: v1
  data:
    CSI_ENDPOINT: unix:/csi/csi.sock
    IKS_BLOCK_PROVIDER_NAME: iks-vpc-classic
    IKS_ENABLED: 'True'
    SECRET_CONFIG_PATH: /etc/storage_ibmc
    VPC_API_GENERATION: '1'
    VPC_API_TIMEOUT: 90s
    VPC_API_VERSION: '2019-07-02'
    VPC_BLOCK_PROVIDER_NAME: vpc-classic
    VPC_ENABLED: 'True'
    VPC_RETRY_ATTEMPT: '10'
    VPC_RETRY_INTERVAL: '60'
  kind: ConfigMap
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: 5.0.0_1441
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: ibm-vpc-block-csi-configmap
    namespace: kube-system
- apiVersion: v1
  data:
    AttachDetachMaxRetryAttempt: '46'
    AttachDetachMinRetryAttempt: '3'
    AttachDetachMinRetryGAP: '3'
    AttacherKubeAPIBurst: '10'
    AttacherKubeAPIQPS: '5.0'
    AttacherWorkerThreads: '15'
    BlockDriverCPULimit: 300m
    BlockDriverCPURequest: 75m
    BlockDriverMemoryLimit: 600Mi
    BlockDriverMemoryRequest: 150Mi
    CSIAttacherCPULimits: 60m
    CSIAttacherCPURequest: 15m
    CSIAttacherMemoryLimit: 120Mi
    CSIAttacherMemoryRequest: 30Mi
    CSIDriverRegistrarCPULimit: 40m
    CSIDriverRegistrarCPURequest: 10m
    CSIDriverRegistrarMemoryLimit: 80Mi
    CSIDriverRegistrarMemoryRequest: 20Mi
    CSIProvisionerCPULimit: 80m
    CSIProvisionerCPURequest: 20m
    CSIProvisionerMemoryLimit: 160Mi
    CSIProvisionerMemoryRequest: 40Mi
    CSIResizerCPULimit: 80m
    CSIResizerCPURequest: 20m
    CSIResizerMemoryLimit: 160Mi
    CSIResizerMemoryRequest: 40Mi
    CSISnapshotterCPULimit: 80m
    CSISnapshotterCPURequest: 20m
    CSISnapshotterMemoryLimit: 160Mi
    CSISnapshotterMemoryRequest: 40Mi
    IsStorageClassDefault: 'true'
    LivenessProbeCPULimit: 20m
    LivenessProbeCPURequest: 5m
    LivenessProbeMemoryLimit: 40Mi
    LivenessProbeMemoryRequest: 10Mi
    NodeDriverCPULimit: 120m
    NodeDriverCPURequest: 75Mi
    NodeDriverMemoryLimit: 300Mi
    NodeDriverMemoryRequest: 30m
    SecretSidecarCPULimit: 40m
    SecretSidecarCPURequest: 10m
    SecretSidecarMemoryLimit: 80Mi
    SecretSidecarMemoryRequest: 20Mi
  kind: ConfigMap
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
      app: ibm-vpc-block-csi-driver
    name: addon-vpc-block-csi-driver-configmap
    namespace: kube-system
- apiVersion: v1
  imagePullSecrets:
  - name: bluemix-default-secret
  - name: bluemix-default-secret-regional
  - name: bluemix-default-secret-international
  kind: ServiceAccount
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: ibm-vpc-block-node-sa
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-driver-snapshotter-role
  rules:
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - update
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - get
    - list
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - delete
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents/status
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-driver-snapshotter-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-block-driver-snapshotter-role
  subjects:
  - kind: ServiceAccount
    name: ibm-vpc-block-controller-sa
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-driver-registrar-role
  rules:
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
  - apiGroups:
    - ''
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-driver-registrar-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-block-driver-registrar-role
  subjects:
  - kind: ServiceAccount
    name: ibm-vpc-block-node-sa
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-external-resizer-role
  rules:
  - apiGroups:
    - ''
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - ''
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - persistentvolumeclaims/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - update
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-external-resizer-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-block-external-resizer-role
  subjects:
  - kind: ServiceAccount
    name: ibm-vpc-block-controller-sa
    namespace: kube-system
- apiVersion: v1
  imagePullSecrets:
  - name: bluemix-default-secret
  - name: bluemix-default-secret-regional
  - name: bluemix-default-secret-international
  kind: ServiceAccount
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: ibm-vpc-block-controller-sa
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-provisioner-role
  rules:
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
    - create
    - delete
  - apiGroups:
    - ''
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - list
    - watch
    - create
    - update
    - patch
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshots
    verbs:
    - get
    - list
  - apiGroups:
    - snapshot.storage.k8s.io
    resources:
    - volumesnapshotcontents
    verbs:
    - get
    - list
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
    - list
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-provisioner-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-block-provisioner-role
  subjects:
  - kind: ServiceAccount
    name: ibm-vpc-block-controller-sa
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-external-attacher-role
  rules:
  - apiGroups:
    - ''
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - ''
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - csi.storage.k8s.io
    resources:
    - csinodeinfos
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: vpc-block-external-attacher-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: vpc-block-external-attacher-role
  subjects:
  - kind: ServiceAccount
    name: ibm-vpc-block-controller-sa
    namespace: kube-system
- apiVersion: storage.k8s.io/v1
  kind: CSIDriver
  metadata:
    name: vpc.block.csi.ibm.io
  spec:
    attachRequired: true
    podInfoOnMount: true
    volumeLifecycleModes:
    - Persistent
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: ibm-vpc-block-csi-node
    namespace: kube-system
  spec:
    selector:
      matchLabels:
        app: ibm-vpc-block-csi-driver
    template:
      metadata:
        labels:
          app: ibm-vpc-block-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REGISTRATION_SOCK)
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REGISTRATION_SOCK
            value: /var/lib/kubelet/csi-plugins/vpc.block.csi.ibm.io/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.6.0
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - rm -rf /registration/vpc.block.csi.ibm.io /registration/vpc.block.csi.ibm.io-reg.sock
          name: csi-driver-registrar
          resources:
            limits:
              cpu: 40m
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            privileged: false
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --sidecarEndpoint=$(SIDECAREP)
          env:
          - name: SIDECAREP
            value: /sidecardir/provider.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          envFrom:
          - configMapRef:
              name: ibm-vpc-block-csi-configmap
          image: ambikanair/ibm-vpc-block-csi-driver:1.25
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          name: iks-vpc-block-node-driver
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          resources:
            limits:
              cpu: 120m
              memory: 300Mi
            requests:
              cpu: 30m
              memory: 75Mi
          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
          - mountPath: /sidecardir
            name: secret-sidecar-sock-dir
          - mountPath: /var/data/kubelet
            mountPropagation: Bidirectional
            name: kubelet-data-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
          - mountPath: /etc/udev
            name: etcudevpath
          - mountPath: /run/udev
            name: runudevpath
          - mountPath: /lib/udev
            name: libudevpath
          - mountPath: /sys
            name: syspath
          - mountPath: /etc/storage_ibmc
            name: customer-auth
            readOnly: true
          - mountPath: /etc/storage_ibmc/cluster_info
            name: cluster-info
            readOnly: true
        - args:
          - --csi-address=/csi/csi.sock
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.8.0
          name: liveness-probe
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: false
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
        - args:
          - --endpoint=$(ENDPOINT)
          env:
          - name: ENDPOINT
            value: unix:/sidecardir/provider.sock
          - name: TOKEN_EXPIRY_DIFF
            value: 20m
          - name: PROFILE_CAPACITY
            value: '1'
          image: icr.io/obs/armada-storage-secret:v1.2.10 
          imagePullPolicy: Always
          name: storage-secret-sidecar
          resources:
            limits:
              cpu: 40m
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 20Mi
          volumeMounts:
          - mountPath: /sidecardir
            name: secret-sidecar-sock-dir
          - mountPath: /var/run/secrets/tokens
            name: vault-token
        serviceAccountName: ibm-vpc-block-node-sa
        tolerations:
        - operator: Exists
        volumes:
        - name: vault-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 600
                path: vault-token
        - emptyDir: {}
          name: secret-sidecar-sock-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/data/kubelet
            type: Directory
          name: kubelet-data-dir
        - hostPath:
            path: /var/lib/kubelet/csi-plugins/vpc.block.csi.ibm.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /etc/udev
            type: Directory
          name: etcudevpath
        - hostPath:
            path: /run/udev
            type: Directory
          name: runudevpath
        - hostPath:
            path: /lib/udev
            type: Directory
          name: libudevpath
        - hostPath:
            path: /sys
            type: Directory
          name: syspath
        - name: customer-auth
          secret:
            secretName: storage-secret-store
        - configMap:
            name: cluster-info
          name: cluster-info
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
    name: ibm-vpc-block-csi-controller
    namespace: kube-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ibm-vpc-block-csi-driver
    serviceName: ibm-vpc-block-service
    template:
      metadata:
        labels:
          app: ibm-vpc-block-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --timeout=900s
          - --leader-election=false
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v6.1.0
          imagePullPolicy: Always
          name: csi-snapshotter
          resources:
            limits:
              cpu: 80m
              memory: 160Mi
            requests:
              cpu: 20m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --timeout=600s
          - --feature-gates=Topology=true
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.3.0
          imagePullPolicy: Always
          name: csi-provisioner
          resources:
            limits:
              cpu: 80m
              memory: 160Mi
            requests:
              cpu: 20m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --timeout=900s
          - --worker-threads=15
          - --kube-api-qps=5.0
          - --kube-api-burst=10
          image: k8s.gcr.io/sig-storage/csi-attacher:v4.0.0
          imagePullPolicy: Always
          name: csi-attacher
          resources:
            limits:
              cpu: 60m
              memory: 120Mi
            requests:
              cpu: 15m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --timeout=900s
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
          imagePullPolicy: Always
          name: csi-resizer
          resources:
            limits:
              cpu: 80m
              memory: 160Mi
            requests:
              cpu: 20m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=/csi/csi.sock
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.8.0
          name: liveness-probe
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --lock_enabled=false
          - --sidecarEndpoint=$(SIDECAREP)
          env:
          - name: SIDECAREP
            value: /csi/provider.sock
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MAX_VPC_RETRY_ATTEMPT
            value: '46'
          - name: MIN_VPC_RETRY_INTERVAL
            value: '3'
          - name: MIN_VPC_RETRY_INTERVAL_ATTEMPT
            value: '3'
          envFrom:
          - configMapRef:
              name: ibm-vpc-block-csi-configmap
          image: ambikanair/ibm-vpc-block-csi-driver:1.25
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          name: iks-vpc-block-driver
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 600Mi
            requests:
              cpu: 75m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /etc/storage_ibmc
            name: customer-auth
            readOnly: true
          - mountPath: /etc/storage_ibmc/cluster_info
            name: cluster-info
            readOnly: true
        - args:
          - --endpoint=$(ENDPOINT)
          env:
          - name: ENDPOINT
            value: unix:/sidecardir/provider.sock
          - name: TOKEN_EXPIRY_DIFF
            value: 20m
          - name: PROFILE_CAPACITY
            value: '1'
          image: icr.io/obs/armada-storage-secret:v1.2.10 
          imagePullPolicy: Always
          name: storage-secret-sidecar
          resources:
            limits:
              cpu: 40m
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 20Mi
          volumeMounts:
          - mountPath: /sidecardir
            name: socket-dir
          - mountPath: /var/run/secrets/tokens
            name: vault-token
        securityContext:
          runAsNonRoot: true
          runAsUser: 2121
        serviceAccountName: ibm-vpc-block-controller-sa
        volumes:
        - name: vault-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 600
                path: vault-token
        - emptyDir: {}
          name: socket-dir
        - name: customer-auth
          secret:
            secretName: storage-secret-store
        - configMap:
            name: cluster-info
          name: cluster-info
    volumeClaimTemplates: []
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      storageclass.kubernetes.io/is-default-class: 'true'
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-10iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 10iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-5iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 5iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-custom
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    iops: '400'
    profile: custom
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-general-purpose
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: general-purpose
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-retain-10iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 10iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-retain-5iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 5iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-retain-custom
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    iops: '400'
    profile: custom
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-retain-general-purpose
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: general-purpose
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-10iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 10iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-5iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 5iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-custom
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    iops: '400'
    profile: custom
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-general-purpose
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: general-purpose
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-retain-10iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 10iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-retain-5iops-tier
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 5iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-retain-custom
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    iops: '400'
    profile: custom
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpc-block-metro-retain-general-purpose
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: general-purpose
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-10iops
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 10iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-5iops
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 5iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-custom
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    iops: '400'
    profile: custom
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-general
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: general-purpose
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-ret-10iops
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 10iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-ret-5iops
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: 5iops-tier
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-ret-custom
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    iops: '400'
    profile: custom
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-odf-ret-general
  parameters:
    billingType: hourly
    classVersion: '1'
    csi.storage.k8s.io/fstype: ext4
    encrypted: 'false'
    encryptionKey: ''
    profile: general-purpose
    region: ''
    resourceGroup: ''
    tags: ''
    zone: ''
  provisioner: vpc.block.csi.ibm.io
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer
- apiVersion: snapshot.storage.k8s.io/v1
  deletionPolicy: Delete
  driver: vpc.block.csi.ibm.io
  kind: VolumeSnapshotClass
  metadata:
    annotations:
      razee.io/build-url: (( grab $BUILD_URL ))
      razee.io/source-url: (( grab $REPO_SOURCE_URL ))
      version: (( grab $BUILD_VERSION || "dev" ))
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: ibm-vpc-block-csi-driver
      razee/force-apply: 'true'
    name: ibmc-vpcblock-snapshot
kind: List
metadata:
  annotations:
    razee.io/build-url: (( grab $BUILD_URL ))
    razee.io/source-url: (( grab $REPO_SOURCE_URL ))
    version: (( grab $BUILD_VERSION || "dev" ))
  name: ibm-vpc-block-csi-driver
  namespace: kube-system
